C51 COMPILER V9.60.7.0   MAIN                                                              05/28/2025 21:03:52 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN ..\obj\main.obj
COMPILER INVOKED BY: D:\C51\BIN\C51.EXE ..\code\main.c OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(..\code;..\user) DEBUG PRINT
                    -(.\main.lst) TABS(2) OBJECT(..\obj\main.obj)

line level    source

   1          #include "config.h"
   2          
   3          uint8 idata nAsrStatus=0;
   4          void MCU_init();
   5          void ProcessInt0(); //识别处理函数
   6          void delay(unsigned long uldata);
   7          void User_handle(uint8 dat);//用户执行操作函数
   8          void Delay200ms();
   9          void Led_test(void);//单片机工作指示
  10          uint8_t G0_flag=DISABLE;//命令标志，ENABLE:允许。DISABLE:禁止命令
  11          sbit LED=P4^2;//信号指示灯
  12          
  13          sbit SRD1 = P1^7;
  14          sbit SRD2 = P1^6;
  15          sbit SRD3 = P1^5;
  16          sbit SRD4 = P1^4;
  17          
  18          void  main(void)
  19          {
  20   1        uint8 idata nAsrRes;
  21   1        uint8 i=0;
  22   1        P1M0 = 0xFF;
  23   1        P1M1 = 0x00;
  24   1        SRD1 = SRD2 = SRD3 = SRD4 =0;
  25   1        Led_test();
  26   1        MCU_init();
  27   1        LD_Reset();
  28   1        UartIni(); /*初始化串口*/
  29   1        nAsrStatus = LD_ASR_NONE;   //  初始状态，没有检测到ASR
  30   1      
  31   1        while(1)
  32   1        {
  33   2          switch(nAsrStatus)
  34   2          {
  35   3          case LD_ASR_RUNING:
  36   3          case LD_ASR_ERROR:
  37   3            break;
  38   3          case LD_ASR_NONE:
  39   3          {
  40   4            nAsrStatus=LD_ASR_RUNING;
  41   4            if (RunASR()==0)  /*  检测到一个ASR，开始处理ASR，ASR开始处理，ASR处理结束*/
  42   4            {
  43   5              nAsrStatus = LD_ASR_ERROR;
  44   5            }
  45   4            break;
  46   4          }
  47   3          case LD_ASR_FOUNDOK: /* 检测到一个ASR，开始处理，处理结束，取走ASR*/
  48   3          {
  49   4            nAsrRes = LD_GetResult();   /*取结果*/
  50   4            User_handle(nAsrRes);//用户执行操作
  51   4            nAsrStatus = LD_ASR_NONE;
  52   4            break;
  53   4          }
  54   3          case LD_ASR_FOUNDZERO:
C51 COMPILER V9.60.7.0   MAIN                                                              05/28/2025 21:03:52 PAGE 2   

  55   3          default:
  56   3          {
  57   4            nAsrStatus = LD_ASR_NONE;
  58   4            break;
  59   4          }
  60   3          }// switch
  61   2        }// while
  62   1      
  63   1      }
  64          
  65          void Led_test(void)
  66          {
  67   1        LED=~ LED;
  68   1        Delay200ms();
  69   1        LED=~ LED;
  70   1        Delay200ms();
  71   1        LED=~ LED;
  72   1        Delay200ms();
  73   1        LED=~ LED;
  74   1        Delay200ms();
  75   1        LED=~ LED;
  76   1      }
  77          
  78          void MCU_init()
  79          {
  80   1        P0 = 0xff;
  81   1        P1 = 0x00;
  82   1        P2 = 0xff;
  83   1        P3 = 0xff;
  84   1        P4 = 0xff;
  85   1      
  86   1      
  87   1        LD_MODE = 0;    
  88   1        IE0=1;
  89   1        EX0=1;
  90   1        EA=1;
  91   1      }
  92          
  93          void Delay200us()   //@22.1184MHz
  94          {
  95   1        unsigned char i, j;
  96   1        _nop_();
  97   1        _nop_();
  98   1        i = 5;
  99   1        j = 73;
 100   1        do
 101   1        {
 102   2          while (--j);
 103   2        }
 104   1        while (--i);
 105   1      }
 106          
 107          void  delay(unsigned long uldata)
 108          {
 109   1        unsigned int j  =  0;
 110   1        unsigned int g  =  0;
 111   1        while(uldata--)
 112   1          Delay200us();
 113   1      }
 114          
 115          void Delay200ms()   //@22.1184MHz
 116          {
C51 COMPILER V9.60.7.0   MAIN                                                              05/28/2025 21:03:52 PAGE 3   

 117   1        unsigned char i, j, k;
 118   1      
 119   1        i = 17;
 120   1        j = 208;
 121   1        k = 27;
 122   1        do
 123   1        {
 124   2          do
 125   2          {
 126   3            while (--k);
 127   3          }
 128   2          while (--j);
 129   2        }
 130   1        while (--i);
 131   1      }
 132          
 133          
 134          void ExtInt0Handler(void) interrupt 0
 135          {
 136   1        ProcessInt0();
 137   1      }
 138          
 139          void  User_handle(uint8 dat)
 140          {
 141   1        if(0==dat)
 142   1        {
 143   2          G0_flag=ENABLE;
 144   2          PrintCom("shou dao\n");  // 收到
 145   2          LED=0;
 146   2        }
 147   1        else if(ENABLE==G0_flag)
 148   1        {
 149   2          G0_flag=ENABLE;
 150   2          LED=1;
 151   2          switch(dat)
 152   2          {
 153   3              case CODE_1:   /*加湿*/
 154   3                  SRD1 = 1;  // Turn on humidifier relay
 155   3                  PrintCom("yi jia shi\n");  // 已加湿
 156   3                  break;
 157   3              case CODE_2:   /*关闭加湿*/
 158   3                  SRD1 = 0;  // Turn off humidifier relay
 159   3                  PrintCom("guan bi jia shi\n");  // 关闭加湿
 160   3                  break;
 161   3              case CODE_3:   /*前进*/
 162   3                  SRD2 = 1;  // Forward motor control
 163   3                  SRD3 = 0;
 164   3                  PrintCom("qian jin\n");  // 前进
 165   3                  break;
 166   3              case CODE_4:   /*后退*/
 167   3                  SRD2 = 0;  // Backward motor control
 168   3                  SRD3 = 1;
 169   3                  PrintCom("hou tui\n");  // 后退
 170   3                  break;
 171   3              default:
 172   3                  // Stop all motors
 173   3                  SRD2 = 0;
 174   3                  SRD3 = 0;
 175   3                  break;
 176   3          }
 177   2        }
 178   1        else
C51 COMPILER V9.60.7.0   MAIN                                                              05/28/2025 21:03:52 PAGE 4   

 179   1        {
 180   2          PrintCom("Please say command\n"); 
 181   2        }
 182   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    362    ----
   CONSTANT SIZE    =     78    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1      10
   IDATA SIZE       =      1       1
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
